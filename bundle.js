"use strict";(()=>{var l=window.document;var u=window.navigator;var m=class{constructor(t,r,o){return new window.XRWebGLLayer(t,r,o)}};function a(e){let t=document.getElementsByClassName("console-dom").item(0);t.textContent+=`${e}.    `}async function c(e){await u.xr.isSessionSupported(e)?a(`${e} is supported`):a(`${e} is not supported`)}var f=new Set,g=new Set,S=new Set;function d(e,t,r){r.addEventListener("click",o=>{let s=o.target;s.checked?t.add(s.value):t.delete(s.value),document.dispatchEvent(new CustomEvent(e,{detail:[Array.from(f),Array.from(g),Array.from(S)]}))})}function R(e){e.addEventListener("click",t=>{t.isTrusted&&t.target.previousElementSibling.click()})}function v(e){document.querySelectorAll(".label").forEach(n=>{R(n)}),document.querySelectorAll(".required-features").forEach(n=>{d(e,f,n)}),document.querySelectorAll(".optional-features").forEach(n=>{d(e,g,n)}),document.querySelectorAll(".module").forEach(n=>{d(e,S,n)})}function E(e){return l.featurePolicy.allowsFeature(e,window.origin)}async function F(e,t,r,o){let s={requiredFeatures:[...t],optionalFeatures:[...r,...o]};o.includes("depth-sensing")&&(s.depthSensing={usagePreference:["cpu-optimized","gpu-optimized"],dataFormatPreference:["luminance-alpha","float32"]}),Object.freeze(s);try{return await u.xr.requestSession(e,s)}catch(n){throw a(`requestSession error = ${n.toString()}`),new Error(n.toString())}}var w=l.createElement("canvas"),i=w.getContext("webgl2",{xrCompatible:!0});i.viewport(0,0,i.canvas.width,i.canvas.height);i.clearColor(0,0,0,0);i.clear(i.COLOR_BUFFER_BIT);var p=new Map;p.set("inline",null);p.set("immersive-ar",null);p.set("immersive-vr",null);function L(e,t){let r=t.session;r.requestAnimationFrame(L),i.bindFramebuffer(i.FRAMEBUFFER,r.renderState.baseLayer.framebuffer)}function y(e){e.updateRenderState({passthroughFullyObscured:!1,baseLayer:new m(e,i)}),e.requestAnimationFrame(L)}async function h(){E("xr-spatial-tracking")?a("xr-spatial-tracking is supported"):a("xr-spatial-tracking is not supported"),await c("immersive-ar"),await c("immersive-vr"),u.xr.addEventListener("devicechange",()=>{a("devicechange")}),l.addEventListener("dispatchRequestSession",async e=>{a(`${e.type} > ${e.target} > ${e.timeStamp}`);let[t,r,o]=e.detail,s=await F("immersive-ar",t,r,o);y(s)}),v("dispatchRequestSession")}h();})();
