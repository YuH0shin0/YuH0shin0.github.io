"use strict";(()=>{var i=window.document;var d=window.navigator;function e(t){let n=i.getElementsByClassName("console-dom").item(0);n.textContent+=`${t}\r
`}async function u(){await d.xr.isSessionSupported("immersive-ar")?e("immersive-ar is supported"):e("immersive-ar is not supported")}function l(t){e(`session.enabledFeatures = ${t.enabledFeatures}`),e(`session.supportedFrameRates = ${t.supportedFrameRates}`),e(`session.frameRate = ${t.frameRate}`),e(`session.inputSources = ${JSON.stringify(t.inputSources)}`),t.inputSources.forEach(r=>{e(`inputSource.gripSpace = ${r.gripSpace}`);let c=r.gripSpace;e(`${c?.toString()}`),e(`inputSource.handedness = ${r.handedness}`),e(`inputSource.profiles = ${r.profiles}`),e(`inputSource.skipRendering = ${r.skipRendering}`),e(`inputSource.targetRayMode = ${r.targetRayMode}`),e(`inputSource.targetRaySpace = ${r.targetRaySpace}`),e(`${r?.targetRaySpace.toString()}`),r.hand?e("hand input module is active"):e("hand input module is not active")}),e(`session.isSystemKeyboardSupported = ${t.isSystemKeyboardSupported}`),e(`session.renderState = ${JSON.stringify(t.renderState)}`),e(`session.visibilityState = ${t.visibilityState}`);let n=t.renderState;e(`renderState.baseLayer = ${n.baseLayer}`),e(`renderState.depthFar = ${n.depthFar}`),e(`renderState.depthNear = ${n.depthNear}`),e(`renderState.inlineVerticalFieldOfView = ${n.inlineVerticalFieldOfView}`),e(`renderState.passthroughFullyObscured = ${n.passthroughFullyObscured}`),e(`WebXR AR module = session.environmentBlendMode = ${t.environmentBlendMode}`),e(`WebXR AR module = session.environmentBlendMode = ${t.interactionMode}`),e(`WebXR Depth Sensing Module = session.depthUsage = ${t.depthUsage}`),e(`WebXR Depth Sensing Module = session.depthDataFormat = ${t.depthDataFormat}`),e(`WebXR Depth Sensing Module = session.depthType = ${t.depthType}`),e(`WebXR Depth Sensing Module = session.depthActive = ${t.depthActive}`)}async function p(t,n){try{return n.includes("depth-sensing")?await d.xr.requestSession("immersive-ar",{requiredFeatures:[...t,...n],optionalFeatures:["secondary-views"],depthSensing:{usagePreference:["cpu-optimized","gpu-optimized"],dataFormatPreference:["luminance-alpha","float32"]}}):await d.xr.requestSession("immersive-ar",{requiredFeatures:[...t,...n],optionalFeatures:["secondary-views"]})}catch(r){throw e(`requestSession error = ${r.toString()}`),new Error(r.toString())}}async function m(){i.featurePolicy.allowsFeature("xr-spatial-tracking")?e("xr-spatial-tracking is supported"):e("xr-spatial-tracking is not supported"),d.xr.addEventListener("devicechange",a=>{a.isTrusted&&e(`event = ${a.type}(${a.target})`)}),e("\u6A5F\u80FD\u78BA\u8A8D");let t=new Set,n=new Set;i.querySelectorAll(".label").forEach(a=>{a.addEventListener("click",s=>{s.isTrusted&&s.target.previousElementSibling.click()})}),i.addEventListener("dispatchReferenceType",async a=>{let s=await p(Array.from(t),Array.from(n));l(s)}),i.addEventListener("dispatchModule",async a=>{let s=await p(Array.from(t),Array.from(n));l(s)}),i.querySelectorAll(".referenceSpaceType").forEach(a=>{a.addEventListener("click",s=>{let o=s.target;o.checked?t.add(o.value):t.delete(o.value),i.dispatchEvent(new CustomEvent("dispatchReferenceType",{detail:t}))})}),i.querySelectorAll(".module").forEach(a=>{a.addEventListener("click",s=>{let o=s.target;o.checked?n.add(o.value):n.delete(o.value),i.dispatchEvent(new CustomEvent("dispatchModule",{detail:n}))})}),await u()}m();})();
