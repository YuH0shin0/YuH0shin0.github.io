"use strict";(()=>{var r=window.document;var c=window.navigator;var l=class{constructor(n,a,d){return new window.XRWebGLLayer(n,a,d)}};function e(t){let n=r.getElementsByClassName("console-dom").item(0);n.textContent+=`${t}.    `}async function S(){await c.xr.isSessionSupported("immersive-ar")?e("immersive-ar is supported"):e("immersive-ar is not supported")}function p(t){e("[START] - describeSession"),e(`session.enabledFeatures = ${t.enabledFeatures}`),e(`session.supportedFrameRates = ${t.supportedFrameRates}`),e(`session.frameRate = ${t.frameRate}`),e(`session.inputSources = ${JSON.stringify(t.inputSources)}`),t.inputSources.forEach(a=>{e(`inputSource.gripSpace = ${a.gripSpace}`);let d=a.gripSpace;e(`${d?.toString()}`),e(`inputSource.handedness = ${a.handedness}`),e(`inputSource.profiles = ${a.profiles}`),e(`inputSource.skipRendering = ${a.skipRendering}`),e(`inputSource.targetRayMode = ${a.targetRayMode}`),e(`inputSource.targetRaySpace = ${a.targetRaySpace}`),e(`${a?.targetRaySpace.toString()}`),e("[START] - WebXR Hand Input Module"),a.hand?e("hand input module is active"):e("hand input module is not active"),e("[END] - WebXR Hand Input Module")}),e(`session.isSystemKeyboardSupported = ${t.isSystemKeyboardSupported}`),e(`session.renderState = ${JSON.stringify(t.renderState)}`),e(`session.visibilityState = ${t.visibilityState}`);let n=t.renderState;e(`renderState.baseLayer = ${n.baseLayer}`),e(`renderState.depthFar = ${n.depthFar}`),e(`renderState.depthNear = ${n.depthNear}`),e(`renderState.inlineVerticalFieldOfView = ${n.inlineVerticalFieldOfView}`),e(`renderState.passthroughFullyObscured = ${n.passthroughFullyObscured}`),e("[START] - WebXR AR Module"),e(`session.environmentBlendMode = ${t.environmentBlendMode}`),e(`session.interactionMode = ${t.interactionMode}`),e("[END] - WebXR AR Module"),e("[START] - WebXR Depth Sensing Module"),e(`session.depthUsage = ${t.depthUsage}`),e(`session.depthDataFormat = ${t.depthDataFormat}`),e(`session.depthType = ${t.depthType}`),e(`session.depthActive = ${t.depthActive}`),e("[END] - WebXR Depth Sensing Module"),e("[END] - describeSession")}async function m(t,n){try{return n.includes("depth-sensing")?await c.xr.requestSession("immersive-ar",{requiredFeatures:[...t,...n],optionalFeatures:["secondary-views","layers"],depthSensing:{usagePreference:["cpu-optimized","gpu-optimized"],dataFormatPreference:["luminance-alpha","float32"]}}):await c.xr.requestSession("immersive-ar",{requiredFeatures:[...t,...n],optionalFeatures:["secondary-views","layers"]})}catch(a){throw e(`requestSession error = ${a.toString()}`),new Error(a.toString())}}async function y(t){p(t);let a=r.createElement("canvas").getContext("webgl2",{xrCompatible:!0}),d=new l(t,a),u={depthNear:.1,depthFar:1e3,inlineVerticalFieldOfView:Math.PI*.5,passthroughFullyObscured:!0,baseLayer:d};t.updateRenderState(u),p(t),setTimeout(()=>{let s={depthNear:.1,depthFar:1e3,inlineVerticalFieldOfView:Math.PI*.5,passthroughFullyObscured:!1,baseLayer:d};t.updateRenderState(s),p(t)},3e3)}function v(){let t=new Set,n=new Set;r.querySelectorAll(".label").forEach(s=>{s.addEventListener("click",i=>{i.isTrusted&&i.target.previousElementSibling.click()})}),r.addEventListener("dispatchReferenceType",async s=>{let i=await m(Array.from(t),Array.from(n));await y(i)}),r.addEventListener("dispatchModule",async s=>{let i=await m(Array.from(t),Array.from(n));await y(i)}),r.querySelectorAll(".referenceSpaceType").forEach(s=>{s.addEventListener("click",i=>{let o=i.target;o.checked?t.add(o.value):t.delete(o.value),r.dispatchEvent(new CustomEvent("dispatchReferenceType",{detail:t}))})}),r.querySelectorAll(".module").forEach(s=>{s.addEventListener("click",i=>{let o=i.target;o.checked?n.add(o.value):n.delete(o.value),r.dispatchEvent(new CustomEvent("dispatchModule",{detail:n}))})})}async function g(){r.featurePolicy.allowsFeature("xr-spatial-tracking")?e("xr-spatial-tracking is supported"):e("xr-spatial-tracking is not supported"),e("\u6A5F\u80FD\u78BA\u8A8D"),v(),await S()}g();})();
