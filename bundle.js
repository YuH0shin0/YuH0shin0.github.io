"use strict";(()=>{var o=class{#e;constructor(){this.#e=navigator}requestSession(e,t={}){return this.#e.xr.requestSession(e,t)}async isXRSupported(e){return this.#e.xr===void 0?await Promise.resolve(!1):await this.#e.xr.isSessionSupported(e)}};var r=class{eventId;source;constructor(e,t){this.source=e,this.eventId=t}dispatchEvent(e){this.source.dispatchEvent(e)}};var n=class extends r{constructor(e,t){super(e,t),e.addEventListener(t,s=>{let{detail:a}=s;e.textContent=`${a}`})}async response(e){try{let t=await e,s=new CustomEvent(this.eventId,{detail:t});this.dispatchEvent(s)}catch(t){let s=new CustomEvent(this.eventId,{detail:t});this.dispatchEvent(s)}}};async function c(){let i=new o,e=document.getElementsByClassName("isSessionSupported inline")[0];await new n(e,"inline").response(i.isXRSupported("inline"));let s=document.getElementsByClassName("isSessionSupported immersive-ar")[0];await new n(s,"immersive-ar").response(i.isXRSupported("immersive-ar"));let m=document.getElementsByClassName("isSessionSupported immersive-vr")[0];await new n(m,"immersive-vr").response(i.isXRSupported("immersive-vr"))}c();})();
