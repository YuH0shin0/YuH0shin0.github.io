"use strict";(()=>{var d=window.document;var o=window.navigator;function e($){let p=d.getElementsByClassName("console-dom").item(0);p.textContent+=`${$}, `}async function g(){e("\u6A5F\u80FD\u78BA\u8A8D"),o.xr.addEventListener("ondevicechange",a=>{a.isTrusted&&e(`${a.type}(${a.target})`)});let p=await o.xr.isSessionSupported("inline");e(`navigator.xr.isSessionSupported('inline') = ${p}`);let v=await o.xr.isSessionSupported("immersive-ar");e(`navigator.xr.isSessionSupported('immersive-ar') = ${v}`),d.querySelectorAll(".enter > button").forEach(a=>{let r=a.classList.toString();a.textContent=r,a.addEventListener("click",async i=>{if(!i.isTrusted)return;let t=await o.xr.requestSession("immersive-ar",{requiredFeatures:[r],optionalFeatures:[]});t.addEventListener("onend",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onframeratechange",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("oninputsourceschange",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onselect",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onselectend",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onselectstart",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onsqueeze",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onsqueezeend",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),t.addEventListener("onvisibilitychange",s=>{s.isTrusted&&e(`event = ${s.type}(${s.target})`)}),e(`session.enabledFeatures = ${t.enabledFeatures}`),e(`session.supportedFrameRates = ${t.supportedFrameRates}`),e(`session.frameRate = ${t.frameRate}`),e(`session.inputSources = ${t.inputSources}`);for(let s of t.inputSources){e(`inputsource.gripSpace = ${s.gripSpace}`);let l=s.gripSpace;e(`${l?.toString()}`),e(`inputsource.handedness = ${s.handedness}`),e(`inputsource.profiles = ${s.profiles}`),e(`inputsource.skipRendering = ${s.skipRendering}`),e(`inputsource.targetRayMode = ${s.targetRayMode}`),e(`inputsource.targetRaySpace = ${s.targetRaySpace}`),e(`${s?.targetRaySpace.toString()}`)}e(`session.isSystemKeyboardSupported = ${t.isSystemKeyboardSupported}`),e(`session.renderState = ${t.renderState}`),e(`session.visibilityState = ${t.visibilityState}`);let n=t.renderState;e(`renderState.baseLayer = ${n.baseLayer}`),e(`renderState.depthFar = ${n.depthFar}`),e(`renderState.depthNear = ${n.depthNear}`),e(`renderState.inlineVerticalFieldOfView = ${n.inlineVerticalFieldOfView}`),e(`renderState.passthroughFullyObscured = ${n.passthroughFullyObscured}`),e(`WebXR AR module = session.environmentBlendMode = ${t.environmentBlendMode}`),e(`WebXR AR module = session.environmentBlendMode = ${t.interactionMode}`)})});let u=d.querySelector(".ar-module > button");u.textContent=u.classList.toString(),u.addEventListener("click",async a=>{let r=u.classList.toString();if(!a.isTrusted)return;let i=await o.xr.requestSession("immersive-ar",{requiredFeatures:["unbounded"],optionalFeatures:[r]});i.addEventListener("onend",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onframeratechange",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("oninputsourceschange",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onselect",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onselectend",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onselectstart",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onsqueeze",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onsqueezeend",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),i.addEventListener("onvisibilitychange",n=>{n.isTrusted&&e(`event = ${n.type}(${n.target})`)}),e(`session.enabledFeatures = ${i.enabledFeatures}`),e(`session.supportedFrameRates = ${i.supportedFrameRates}`),e(`session.frameRate = ${i.frameRate}`),e(`session.inputSources = ${i.inputSources}`);for(let n of i.inputSources){e(`inputsource.gripSpace = ${n.gripSpace}`);let s=n.gripSpace;e(`${s?.toString()}`),e(`inputsource.handedness = ${n.handedness}`),e(`inputsource.profiles = ${n.profiles}`),e(`inputsource.skipRendering = ${n.skipRendering}`),e(`inputsource.targetRayMode = ${n.targetRayMode}`),e(`inputsource.targetRaySpace = ${n.targetRaySpace}`),e(`${n?.targetRaySpace.toString()}`)}e(`session.isSystemKeyboardSupported = ${i.isSystemKeyboardSupported}`),e(`session.renderState = ${i.renderState}`),e(`session.visibilityState = ${i.visibilityState}`);let t=i.renderState;e(`renderState.baseLayer = ${t.baseLayer}`),e(`renderState.depthFar = ${t.depthFar}`),e(`renderState.depthNear = ${t.depthNear}`),e(`renderState.inlineVerticalFieldOfView = ${t.inlineVerticalFieldOfView}`),e(`renderState.passthroughFullyObscured = ${t.passthroughFullyObscured}`),e(`WebXR AR module = session.environmentBlendMode = ${i.environmentBlendMode}`),e(`WebXR AR module = session.environmentBlendMode = ${i.interactionMode}`)});let c=d.querySelector(".depth-sensing-module > button");c.textContent=c.classList.toString(),c.addEventListener("click",async a=>{if(!a.isTrusted)return!1;let r=await o.xr.requestSession("immersive-ar",{requiredFeatures:["depth-sensing"],depthSensing:{usagePreference:["cpu-optimized","gpu-optimized"],dataFormatPreference:["luminance-alpha","float32"]}});e(`WebXR Depth Sensing Module = session.depthUsage = ${r.depthUsage}`),e(`WebXR Depth Sensing Module = session.depthDataFormat = ${r.depthDataFormat}`),e(`WebXR Depth Sensing Module = session.depthType = ${r.depthType}`),e(`WebXR Depth Sensing Module = session.depthActive = ${r.depthActive}`),r.addEventListener("onend",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onframeratechange",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("oninputsourceschange",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onselect",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onselectend",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onselectstart",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onsqueeze",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onsqueezeend",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),r.addEventListener("onvisibilitychange",t=>{t.isTrusted&&e(`event = ${t.type}(${t.target})`)}),e(`session.enabledFeatures = ${r.enabledFeatures}`),e(`session.supportedFrameRates = ${r.supportedFrameRates}`),e(`session.frameRate = ${r.frameRate}`),e(`session.inputSources = ${r.inputSources}`);for(let t of r.inputSources){e(`inputsource.gripSpace = ${t.gripSpace}`);let n=t.gripSpace;e(`${n?.toString()}`),e(`inputsource.handedness = ${t.handedness}`),e(`inputsource.profiles = ${t.profiles}`),e(`inputsource.skipRendering = ${t.skipRendering}`),e(`inputsource.targetRayMode = ${t.targetRayMode}`),e(`inputsource.targetRaySpace = ${t.targetRaySpace}`),e(`${t?.targetRaySpace.toString()}`)}e(`session.isSystemKeyboardSupported = ${r.isSystemKeyboardSupported}`),e(`session.renderState = ${r.renderState}`),e(`session.visibilityState = ${r.visibilityState}`);let i=r.renderState;e(`renderState.baseLayer = ${i.baseLayer}`),e(`renderState.depthFar = ${i.depthFar}`),e(`renderState.depthNear = ${i.depthNear}`),e(`renderState.inlineVerticalFieldOfView = ${i.inlineVerticalFieldOfView}`),e(`renderState.passthroughFullyObscured = ${i.passthroughFullyObscured}`),e(`WebXR AR module = session.environmentBlendMode = ${r.environmentBlendMode}`),e(`WebXR AR module = session.environmentBlendMode = ${r.interactionMode}`),e(`WebXR Depth Sensing module = session.resumeDepthSensing() = ${r.resumeDepthSensing()}`)})}g();})();
